Please answer the below core-java Questions:
What is programing language?
A.
A programming language is a vocabulary and set of grammatical rules
for instructing a computer or computing device to perform specific tasks.
The term programming language usually refers to high-level languages, such as
BASIC, C, C++, COBOL, Java, FORTRAN, Ada, and Pascal.

What jdk contains or composed of and define each components?
A.
The JDK includes the Java Runtime Environment (JRE), an interpreter
(java), a compiler (javac), an archiver (jar), a documentation generator (javadoc),
 and some other development tools.

What is IDE?
A.
An integrated development environment (IDE) is a software application that helps
programmers develop software code efficiently. It increases developer productivity
by combining capabilities such as software editing, building, testing, and packaging
in an easy-to-use application.

What are the IDEs available in the market to support java?
A.
The following are the best Java IDEs that are mostly used in the world:
Eclipse
NetBeans
IntelliJ IDEA
BlueJ
JCreator
JDeveloper
MyEclipse
Greenfoot
DrJava
Xcode
Codenvy

Explain the entire java life cycle.

Life cycle of a java program tells us what happens right from the point when we
type source code in a text editor to the point that source code is converted into
machine code (0’s and 1’s).
There are three main stages in the life cycle of a java program. They are:
-Editing the program
-Compiling the source code
-Executing the byte code

First, you will start with typing the program in a text-editor (ex: notepad, notepad++, wordpad, textedit etc).
 After completing editing of the program, we have to save the file. While saving
  the file you should remember that the file must be saved with .java extension.
  For example, let’s think that I had written a Java program which contains a single
  class Sample (more on classes in future posts). It is a good convention to save
   the file with the name of the class. So, as per my example, the file will be saved as Sample.java.

Second step is compilation. The name of the Java compiler is javac. The input to
the compiler is Java source code which is available in Sample.java. The output of the compiler is machine
 independent or platform independent code which is known as bytecode. The file which is generated after
  compilation is .class file. As per my example, the bytecode file will be Sample.class.

Last step is execution. The bytecode generated by the compiler will be executed by Java Virtual Machine
(JVM). Input to the JVM is bytecode and output is machine code (0’s and 1’s) which will be executed by the
CPU of the local machine.


what is class?
1-Class is a set of object which shares common characteristics/ behavior and common properties/ attributes.
2-Class is not a real-world entity. It is just a template or blueprint or prototype from which objects are created.
3-Class does not occupy memory.
4-Class is a group of variables of different data types and a group of methods.

A class in java can contain:
-data member
-method
-constructor
-nested class and
-interface

What is object?
It is a basic unit of Object-Oriented Programming and represents real-life entities. A typical Java program
creates many objects, which as you know, interact by invoking methods. An object consists of :
1-State: It is represented by attributes of an object. It also reflects the properties of an object.
2-Behavior: It is represented by the methods of an object. It also reflects the response of an object with other objects.
3-Identity: It gives a unique name to an object and enables one object to interact with other objects.

What is the entry point of an application?
an entry point is the place in a program where the execution of a program begins, and where the program has
access to command line arguments.
In Java programs, the point from where the program starts its execution or simply the entry point of Java programs
is the main() method.

Why main is static?
The main() method is declared static so that JVM can call it without creating an instance of the class
containing the main() method. We must declare the main() function static as no class object is present
when the java runtime starts. JVM can then load the class into the main memory and invoke the main() method.

Which class is the superclass of all classes?
Object class is the root or superclass of the class hierarchy, which is present in java. lang package.
All predefined classes and user-defined classes are the subclasses from Object class.

What is difference between path and classpath variables?
path variable is used to set the path for all Java software tools like javac.exe, java.exe, javadoc.exe,
and so on. classpath variable is used to set the path for java classes.

What is the difference between an Interface and Abstract class?

A.:Abstract class:
1.	An abstract class can contain both abstract and non-abstract methods.
2.	An abstract class can have all four; static, non-static and final, non-final variables.
3.	To declare abstract class abstract keywords are used.
4.	It supports multiple inheritance.
5.	The keyword ‘extend’ is used to extend an abstract class
6.	It has class members like private and protected, etc.

B.Interface
1.Interface contains only abstract methods.
2.Only final and static variables are used.
3.The interface can be declared with the interface keyword.
4.It does not support multiple inheritance.
5.The keyword implement is used to implement the interface.
6.It has class members public by default.

Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
No, we can't create an object of an abstract class. But we can create a reference variable
of an abstract class. The reference variable is used to refer to the objects of derived
classes (subclasses of abstract class)

what is Access Specifier?
An access specifier is a defining code element that can determine which elements of a program
are allowed to access a specific variable or other piece of data.
access specifiers” or “Access Modifiers are used to set the accessibility (visibility) of classes,
interfaces, variables, methods, constructors, data members, and the setter methods.

What is OOP ? Define each feature of java OOP.
-OOP stands for Object-Oriented Programming. Procedural programming is about writing procedures or methods
that perform operations on the data, while object-oriented programming is about creating objects that
contain both data and methods.

-features of java oop:
1-Abstraction. Using simple things to represent complexity. We all know how to turn the TV on, but we
don’t need to know how it works in order to enjoy it. In Java, abstraction means simple things like objects,
classes and variables represent more complex underlying code and data. This is important because it lets
you avoid repeating the same work multiple times.

2-Encapsulation. The practice of keeping fields within a class private, then providing access to those
fields via public methods. Encapsulation is a protective barrier that keeps the data and code safe within
the class itself. We can then reuse objects like code components or variables without allowing open access
to the data system-wide.

3-Inheritance. A special feature of Object-Oriented Programming in Java, Inheritance lets programmers create
new classes that share some of the attributes of existing classes. Using Inheritance lets us build on
previous work without reinventing the wheel.

4-Polymorphism. Allows programmers to use the same word in Java to mean different things in different contexts.
One form of polymorphism is method overloading. That’s when the code itself implies different meanings.
The other form is method overriding. That’s when the values of the supplied variables imply different
meanings. Let’s delve a little further.

What is Java Package and which package is imported by default?
-A package in Java is used to group related classes. Think of it as a folder in a file directory.
We use packages to avoid name conflicts, and to write a better maintainable code.
-Java compiler imports java. lang package internally by default. It provides the fundamental classes
that are necessary to design a basic Java program.

What is API? Name list of API that you have used so far.
An API can be described as a way to enable computers to possess a common interface, to allow them to
communicate with each other. Java Application Programming Interface (API) is the area of Java development
kit (JDK). An API includes classes, interfaces, packages and also their methods, fields, and constructors.

Does java support multiple inheritance, explain why or why not?
Java doesn’t support multiple inheritances in classes because it can lead to diamond problem and rather
than providing some complex way to solve it, there are better ways through which we can achieve the same
result as multiple inheritances.

What is method overloading and when it happens?
-Method overloading in java is a feature that allows a class to have more than one method with the same name,
but with different parameters.
-Overloading happens when you have two methods with the same name but different signatures (or arguments).
In a class we can implement two or more methods with the same name. Overloaded methods are differentiated
based on the number and type of parameter passed as arguments to the methods.

Explain exceptions in java and how to handle it.
A.An exception is an event, which occurs during the execution of a program, that disrupts the normal
flow of the program's instructions.
B.how to handle it:
B.1-The try-catch :
is the simplest method of handling exceptions. Put the code you want to run in the try block,
and any Java exceptions that the code throws are caught by one or more catch blocks.
B.2-The throw keyword :
is used to create a custom error. The throw statement is used together with an exception type.
There are many exception types available in Java: ArithmeticException , ClassNotFoundException ,
ArrayIndexOutOfBoundsException , SecurityException , etc.

What is static keyword in java? How it has been used in variables and methods ?
-The static keyword :is a non-access modifier used for methods and attributes. Static methods/attributes
can be accessed without creating an object of a class.

-In Java, static keyword is mainly used for memory management. It can be used with variables, methods,
 blocks and nested classes. It is a keyword which is used to share the same variable or method of a given
 class. Basically, static is used for a constant variable or a method that is same for every instance of
 a class.

What is final and how it has been used variables and methods?
Java final keyword is a non-access specifier that is used to restrict a class, variable, and method.

What is final, finally and finalize?
1.final is a keyword used in Java to restrict the modification of a variable, method, or class.
2.finally is a block used in Java to ensure that a section of code is always executed, even if an exception is thrown.
3.finalize is a method in Java used to perform cleanup processing on an object before it is garbage collected.

What is a constructor ?
A constructor in Java is a special method that is used to initialize objects.
The constructor is called when an object of a class is created.

Can we have multiple constructors in a class?
A class can have multiple constructors, as long as their signature (the parameters they take) are not the same.
You can define as many constructors as you need. When a Java class contains multiple constructors,
we say that the constructor is overloaded

If we don't have a constructor declared, what is called during the object creation?
If a class does not explicitly declare any, the Java compiler automatically provides a no-argument constructor,
called the default constructor.

What is "this" keyword in java ?
The this keyword makes reference to the global variable.

What is "super" keyword in java? How many possible way can you use?
-The super keyword refers to superclass (parent) objects.
1-To call methods of the superclass that is overridden in the subclass.
2-To access attributes (fields) of the superclass if both superclass and subclass have attributes with the same name.
3-To explicitly call superclass no-arg (default) or parameterized constructor from the subclass constructor.

What is JVM stand for ?
JVM stands for Java Virtual Machine. It is essentially a virtual machine or runtime environment that allows
Java programs to run and operate on multiple devices and operating systems.

Is JVM platform independent?
JVM is undoubtedly platform-independent.

What version of java are you using?
i'm using this version java 11.0.17 2022-10-18 LTS

What is JAR stand for ?
JAR stands for Java ARchive. It's a file format based on the popular ZIP file format and is used for
aggregating many files into one.

 What is the difference between JDK and JVM?
1.The JDK (Java Development Kit) is a software development kit that develops applications in Java.
Along with JRE, the JDK also consists of various development tools (Java Debugger, JavaDoc, compilers, etc.)
The JDK primarily assists in executing codes. It primarily functions in development.
2.The Java Virtual Machine (JVM) is a platform-independent abstract machine that has three notions in the
form of specifications. This document describes the requirement of JVM implementation.
JVM specifies all of the implementations. It is responsible for providing all of these implementations to the JRE.

What is the difference between JVM and JRE?
1.The Java Virtual Machine (JVM) is a platform-independent abstract machine that has three notions in the
form of specifications. This document describes the requirement of JVM implementation.
JVM specifies all of the implementations. It is responsible for providing all of these implementations to the JRE.
2.The Java Runtime Environment (JRE) is an implementation of JVM. It is a type of software package that
provides class libraries of Java, JVM, and various other components for running the applications written
in Java programming.
JRE has a major responsibility for creating an environment for the execution of code.

What is compile time and run time?
Compile time is the period when the programming code (such as C#, Java, C, Python) is converted to the
machine code (i.e. binary code). Runtime is the period of time when a program is running and generally
occurs after compile time.

What is heap?
The heap is a memory used by programming languages to store global variables. By default, all global variable
are stored in heap memory space. It supports Dynamic memory allocation.

How java manage it's memory?
memory management is the process of allocation and de-allocation of objects, called Memory management.
Java does memory management automatically.
so, in order to manage its memory,java uses garbage collection.During the garbage collection objects
that are no longer used are cleared, thus making space for new objects.

What is the difference between String, StringBuffer and StringBuilder?
1.String
String is immutable  ( once created can not be changed ) object. The object created as a String is stored in the  Constant String Pool.
Every immutable object in Java is thread-safe, that implies String is also thread-safe . String can not be used by two threads simultaneously.
String  once assigned can not be changed.
2.StringBuffer:
StringBuffer is mutable means one can change the value of the object . The object created through
StringBuffer is stored in the heap . StringBuffer  has the same methods as the StringBuilder , but each
method in StringBuffer is synchronized that is StringBuffer is thread-safe .
StringBuffer value can be changed , it means it can be assigned to the new value .
3.StringBuilder
StringBuilder  is same as the StringBuffer , that is it stores the object in heap and it can also be modified .
The main difference between the StringBuffer and StringBuilder
is that StringBuilder is  not thread safe.
StringBuilder is fast as it is not thread safe.

What is Singleton class?
Singleton is a design pattern that ensures that a class can only have one object.

What is Serialization and Deserialization?
Serialization is the conversion of the state of an object into a byte stream; deserialization does the opposite

when to use transient variable in java?
1.We can use this Transient keyword when you have fields that are derived/calculated from other fields within the instance of a class.
2.Use it with fields which are not marked as “Serializable” inside JDK or application code.
This is because classes which do not implement Serializable interface are referenced within any serializable
class and cannot be serialized and will throw “java.io.NotSerializableException” exception.

Difference between while and do..while loop?
in the do-while loop, the loop body executes exactly once whether the condition is true or false,
but in the while loop, the loop body executes only if the condition is true.

What is Enum?
An enum is a special "class" that represents a group of constants (unchangeable variables, like final variables).

What is Iterator?
An Iterator is an object that can be used to loop through collections, like ArrayList and HashSet.
It is called an "iterator" because "iterating" is the technical term for looping. To use an Iterator,
you must import it from the java.util package.

Which one will take more memory, an int or Integer?
Integer takes more memory than int.
int is a primitive data type and takes 32 bits(4 bytes) to store. On other hand Integer is an object
which takes 128 bits (16 bytes) to store its int value.

Why is String Immutable in Java?
The String is immutable in Java because of the security, synchronization and concurrency,
caching, and class loading.

What is constructor chaining in Java?
Constructor chaining is the process of invoking a series of constructors within the same class or by
the child class's constructors

The difference between Serial and Parallel Garbage Collector?
The only difference between serial and parallel garbage collector is that serial garbage collector uses a
single thread for garbage collection process while the parallel garbage collector uses multiple threads for
the garbage collection

What is JIT stands for?
Just-in-time, is an inventory management method in which goods are received from suppliers only as they are
needed. The main objective of this method is to reduce inventory holding costs and increase inventory turnover.

Explain Java Heap space and Garbage collection?
Java objects reside in an area called the heap. The heap is created when the JVM starts up and may increase
or decrease in size while the application runs. When the heap becomes full, garbage is collected.
During the garbage collection objects that are no longer used are cleared, thus making space for new objects.

Can you guarantee the garbage collection process?
No, Garbage collection does not guarantee that a program will not run out of memory.

The purpose of garbage collection (GC) is to identify and discard objects that are no longer needed by a
Java program, so that their resources can be reclaimed and reused.

What is the difference between stack and heap in Java?
Stack memory is short-lived whereas heap memory lives from the start till the end of application execution.

What is reflection in java and why is it useful?
Reflection is a feature in the Java programming language. It allows an executing Java program to examine or
"introspect" upon itself, and manipulate internal properties of the program. For example, it's possible
for a Java class to obtain the names of all its members and display them.

what is multithreading in java?
In Java, Multithreading refers to a process of executing two or more threads simultaneously
for maximum utilization of the CPU

What is the use of synchronization in Java?
Synchronization in java is the capability to control the access of multiple threads to any shared resource.
In the Multithreading concept, multiple threads try to access the shared resources at a time to produce
inconsistent results. The synchronization is necessary for reliable communication between threads.

What is Framework?
Java Frameworks are the bodies of pre-written code through which you are allowed to add your own code.

What are the testing Framework available in java?
Java Testing Frameworks:
1.Selenium
2.JUnit
3.TestNG
4. SerenityBDD
5. Mockito

Difference between jUnit and testNG?
JUnit does not include any dependency tests. TestNG includes dependency tests. JUnit is a framework that
is open-source and may be used to write and trigger tests. TestNG is a Java-based framework that provides
an improved way to run tests.

What are the dependencies for this project?

what is dependency injection in java?
dependency injection is the process of supplying a resource that a given piece of code requires.
The required resource, which is often a component of the application itself, is called a dependency.

What is static binding and dynamic binding?
Static binding does its work during compile time and has better performance. Static binding can be applied
using function overloading or operator overloading. Dynamic binding works during run time & is more flexible.
Dynamic binding can be accomplished using virtual functions.




